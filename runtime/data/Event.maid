module | root vm | where

vm define-global: "Event" as: { Event };

let Event = {
  def new
    this { def #handlers = [] }

  def notify!: value
    this#handlers each: { h | h call: value }
    
  def listen!: handler
    this#handlers recover: { a | this#handlers append!: handler };
    this

  def listen-once!: handler
    let wrapper = { ev | handler call: ev; this remove!: wrapper }
    this listen!: wrapper

  def remove!: handler
    this#handlers remove!: handler

  def remove-all!
    this#handlers remove-all!
}