module | root vm | where

vm define-global: "Test-Runner" as: { Test-Runner };

let Test-Runner = {
  def run-examples: object
    (* Runs the examples defined for an object *)
    let mirror = Mirror object: object;
    let object-name = object as-string;
    Console log: "";
    Console log: object-name;
    Console log: ("-" repeat: object-name length);
    mirror method-names each: { name |
      mirror method-for-name: name >> chain: { method |
        let method-mirror = Mirror meta: method;
        method-mirror examples match: {
          def ok: examples
            Console log: "∙ " + name + " (" + examples length as-string + ")";
            let source = method-mirror source get-or-default: "(No source)";
            examples each: { example |
              example value then: { Console log: "  ✓ " + source }
                            else: { Console log: "  ✗ " + source }
            }

          def failure: #
            Console log: "∘ " + name
        }
      }
    }
    
}