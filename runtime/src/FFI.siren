module | vm | where

vm define-global: "FFI" as: { FFI };

let FFI = {
  def import: object
    vm foreign/match: object with: {
      def unit
        Unit

      def boolean
        vm if: object then: True else: False

      def primitive
        object

      def array
        object map: (FFI import: _)

      def object
        let dict = Dictionary new;
        vm object: dict at: "data" put: object;
        dict
    }
  
  def export: object
    vm foreign/export: object

  def invoke: function in-context: object with-arguments: arguments
    vm foreign/invoke*: function in: object with: arguments
}