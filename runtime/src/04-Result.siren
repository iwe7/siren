(**********************************************************************
 *
 * This source file is part of the Siren project.
 *
 * Copyright (C) 2013-2015 Quildreen Motta.
 * Licensed under the MIT licence.
 *
 * See LICENCE for licence information.
 * See CONTRIBUTORS for the list of contributors to the project.
 *
 **********************************************************************)
module | vm | where

vm define-global: "Result" as: { Result };
let Result = {
  def traits = {
    def Ok = Ok
    def Failure = Failure
  }

  def ok: value
    this traits Ok {
      def value = value
    }

  def failure: value
    this traits Failure {
      def value = value
    }

  def merge
    this value
};

let Ok = Result {
  def map: transformation
    let newValue = transformation call: this value;
    this { def value newValue }

  def chain: transformation
    transformation call: this value

  def match: pattern
    pattern ok: this value

  def recover: handler
    this

  def as-string
    "<Result ok: " + this value as-string + ">"

  def as-tuple
    [this value]

  def === aResult
    let value = this value;
    aResult match: {
      def ok: v      = v === value
      def failure: v = False
    }

  def ok?
    True

  def failure?
    False

  def then: ok else: failure
    ok value

  def get!
    this value

  def get-or-default: defaultValue
    this value
};

let Failure = Result {
  def map: transformation
    this

  def chain: transformation
    this

  def match: pattern
    pattern failure: this value

  def recover: handler
    handler call: this value

  def as-string
    "<Result failure: " + this value as-string + ">"

  def as-tuple
    []

  def === aResult
    let value = this value;
    aResult match: {
      def ok: v      = False
      def failure: v = v === value
    }

  def ok?
    False

  def failure?
    True

  def then: ok else: failure
    failure value

  def get!
    Error panic!: "Can't extract a value from a failure. Use `merge`, `get-or-default:`, or `recover:`"

  def get-or-default: defaultValue
    defaultValue
}